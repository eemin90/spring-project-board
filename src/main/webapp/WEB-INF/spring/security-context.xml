<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="customUserDetailsService" class="io.github.eemin90.security.CustomUserDetailsService" />

	<security:http>
		<security:intercept-url pattern="/secure/all" access="permitAll" /> <!-- pattern 속성은 URI의 패턴 설정, access 속성은 권한 체크 -->
		<security:intercept-url pattern="/secure/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/secure/admin" access="hasRole('ROLE_ADMIN')" />
		<!-- <security:form-login /> --> <!-- 권한이 없는 경우 security의 login form으로 redirect됨 -->
		<security:form-login login-page="/member/login" default-target-url="/board/list" />
		<security:logout />
		<security:csrf disabled="true" /> <!-- disabled="true"는 권장되는 값이 아님 -->
		<security:remember-me data-source-ref="dataSource" /> <!-- root-context.xml의 HikariCP Bean ID 값 -->
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!--
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/> 해당 권한의 유저 id, password 설정
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/> {noop} 문자열을 추가하면 패스워드의 인코딩 처리 없이 사용가능. 1개 이상 권한 부여 가능
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	-->

</beans>
